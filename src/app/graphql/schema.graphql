type Test {
    _id: ObjectId!
    note_id: ObjectId!
    description: String
    created_on: Timestamp!
    author_id: ObjectId!
    open_on: Timestamp
    close_on: Timestamp
}

scalar ObjectId
scalar Timestamp
scalar JSON

type User {
  _id: ObjectId!
  name: String
  image: String
}

type Note {
  _id: ObjectId!
  title: String!
  delta: JSON
  variant: String
  author: User!
  private: Boolean!
  created_on: Timestamp!
  updated_on: Timestamp!
  tests: [Test!]!
}

type Profile {
  _id: ObjectId!
  name: String
  email: String
  image: String
}

type Query {
  hello: String!
  note(_id: ObjectId!): Note
  notes: [Note!]!
  profile: Profile
}

type Mutation {
  newNote(title: String!, delta: JSON, private: Boolean, variant: String): Note
  updateNote(_id: ObjectId!, title: String, delta: JSON, private: Boolean, variant: String): Note
  deleteNote(_id: ObjectId!): Boolean
  createTest(noteId: ObjectId!): Boolean
}